"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class arduino_out(object):
    __slots__ = ["leftspeed", "rightspeed", "motorEnable", "io_device1", "io_device2", "io_device3"]

    __typenames__ = ["int16_t", "int16_t", "int8_t", "int16_t", "int16_t", "int16_t"]

    __dimensions__ = [None, None, None, None, None, None]

    def __init__(self):
        self.leftspeed = 0
        self.rightspeed = 0
        self.motorEnable = 0
        self.io_device1 = 0
        self.io_device2 = 0
        self.io_device3 = 0

    def encode(self):
        buf = BytesIO()
        buf.write(arduino_out._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">hhbhhh", self.leftspeed, self.rightspeed, self.motorEnable, self.io_device1, self.io_device2, self.io_device3))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != arduino_out._get_packed_fingerprint():
            raise ValueError("Decode error")
        return arduino_out._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = arduino_out()
        self.leftspeed, self.rightspeed, self.motorEnable, self.io_device1, self.io_device2, self.io_device3 = struct.unpack(">hhbhhh", buf.read(11))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if arduino_out in parents: return 0
        tmphash = (0x72751abe9e95d58b) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if arduino_out._packed_fingerprint is None:
            arduino_out._packed_fingerprint = struct.pack(">Q", arduino_out._get_hash_recursive([]))
        return arduino_out._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

